name: Build and Run
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
  
defaults:
  run:
    shell: pwsh

permissions:
  contents: write
  pull-requests: write
    
jobs:
  build-and-publish:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up dotnet
      uses: actions/setup-dotnet@v3
   
    - name: Restore with dotnet
      run: dotnet restore 
    
    - name: Build with dotnet
      run: dotnet build --configuration Release --no-restore
    
    - name: Publish using dotnet
      run: dotnet publish --configuration Release --no-build --output "${{ github.workspace }}/Release" 
      
    - name: Upload artifact for running
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: ${{ github.workspace}}/Release/
        if-no-files-found: error

  run-and-commit:
    if: github.event.action != 'closed' && github.event.pull_request.merged == false
    runs-on: windows-latest
    needs: build-and-publish
    environment: commit-content
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact from build and publish
        uses: actions/download-artifact@v3
        with:
          name: app
          path: App/
          
      - name: Run
        run: ./App/TestConsoleApplication.exe | Out-File (New-Item -Path "${{ github.workspace }}/LastWorkflowOutput/Result.txt" -Force)

      - name: Create new PR and branch
        run: |
          $date = "$(Get-Date -Format yyyy-MM-dd)"
          $branchName = "Workflow/$date"
          echo 'Branch: $branchName'
          git pull origin main
          git config --local user.email "joshua.willis@intellitect.com"
          git config --local user.name "test-cicd-bot"
          git checkout -b $branchName
          git add .
          git commit -m "chore(content): regenerate random $date"
          git push -u origin $branchName --force
          gh pr create --title "chore (content): regenerate random on $date" --fill --label ci-sync --base "main"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}